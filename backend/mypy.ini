[mypy]
# Enable all strictness-related flags
strict = False

# Treat Optional per PEP 484
strict_optional = False

# Ensure all execution paths have a return value
; warn_no_return = True

# Prohibit assigning values of type 'Any' to subtypes of 'Any'
disallow_any_generics = True

check_untyped_defs = False
disallow_untyped_defs = False
disallow_untyped_calls = False

# Warn about casting an expression to its inferred type
warn_redundant_casts = True

# Warn about variables that are implicitly inferred to be of type 'Any'
warn_unreachable = True

# Disallow usage of 'Any' as a fallback for missing type annotations
disallow_any_unimported = False

# Show none error messages from the same category as the first seen error
show_error_codes = True

# Show error contexts (the part of the source code that caused the error)
show_error_context = True

# Warns about unneeded '# type: ignore' comments
warn_unused_ignores = True

# Plugins for Django
plugins = configurations_mypy_django_plugin.py, mypy_django_plugin.main


[mypy.plugins.django-stubs]
django_settings_module = "senda.settings"

[mypy-*.migrations.*]
# Ignore missing imports specifically in migrations, as they are often not worth the strictness
ignore_errors = True

# Settings for other libraries can be added similarly to the below:

# Ignore missing imports from django_configurations
[mypy-configurations.*]
ignore_missing_imports = True

[mypy-import_export.*]
ignore_missing_imports = True

[mypy-graphene.*]
ignore_missing_imports = True

[mypy-graphene_django.*]
ignore_missing_imports = True

[mypy-decouple.*]
ignore_missing_imports = True
