query contracts($page: Int, $status: [ContractHistoryStatusChoices!]) {
    contracts(page: $page, status: $status) {
        count
        numPages
        results {
            id
            client {
                firstName
                lastName
            }
            office {
                name
            }
            createdOn
            contractStartDatetime
            contractEndDatetime
            latestHistoryEntry {
                status
            }
        }
    }
}

query contractById($id: ID!) {
    contractById(id: $id) {
        id
        createdOn
        firstDepositAmount
        finalDepositAmount
        client {
            id
            firstName
            dni
            email
            houseNumber
            houseUnit
            lastName
            locality {
                id
                name
                state
                postalCode
            }
            phoneNumber
            phoneCode
            streetName
        }
        contractEndDatetime
        contractStartDatetime
        latestHistoryEntry {
            status
        }
        expirationDate
        houseNumber
        houseUnit
        office {
            name
            street
            houseNumber
        }
        locality {
            id
            name
        }
        streetName
        total
        numberOfRentalDays
        historyEntries {
            id
            createdOn
            status
            note
            responsibleUser {
                firstName
                lastName
                email
            }
        }
        contractItems {
            id

            product {
                id
                brand {
                    name
                }
                name
                sku
            }
            productPrice

            quantity

            serviceItems {
                service {
                    name
                    id
                    price
                    billingType
                    billingPeriod
                }
                price
                discount
                subtotal
                total
                billingType
                billingPeriod
            }

            quantity

            productSubtotal
            servicesSubtotal
            shippingSubtotal

            productDiscount
            servicesDiscount
            shippingDiscount

            total
        }
    }
}

mutation createContract(
    $contractData: ContractInput!
    $itemsData: [ContractItemInput!]!
) {
    createContract(contractData: $contractData, itemsData: $itemsData) {
        contractId
        error
    }
}

mutation deleteContract($id: ID!) {
    deleteContract(id: $id) {
        success
    }
}

mutation changeContractStatus(
    $id: ID!
    $cashPayment: Int
    $status: String!
    $devolutions: [ContractItemDevolutionInput!]
    $note: String
) {
    changeContractStatus(
        id: $id
        status: $status
        cashPayment: $cashPayment
        devolutions: $devolutions
        note: $note
    ) {
        contract {
            id
            historyEntries {
                id
                createdOn
                status
                note
                responsibleUser {
                    firstName
                    lastName
                    email
                }
            }
            latestHistoryEntry {
                status
            }
        }

        error
    }
}
