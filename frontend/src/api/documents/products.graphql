fragment ProductListItem on Product {
    id
    name
    price
    type
    sku
    brand {
        name
    }
    services {
        id
        name
        price
        billingType
        billingPeriod
    }
    currentOfficeQuantity
}

query products($page: Int, $query: String, $type: ProductTypeChoices, $officeId: ID) {
    products(page: $page, query: $query, type: $type, officeId: $officeId) {
        count
        currentPage
        numPages
        results {
            ...ProductListItem
        }
    }
}

query productById($id: ID!) {
    productById(id: $id) {
        sku
        name
        description
        brand {
            id
            name
        }
        type
        price
        stockItems {
            office {
                id
                name
                locality {
                    name
                }
            }
            quantity
        }
        services {
            id
            name
            price
        }
        suppliers {
            supplier {
                id
                name
            }
            price
        }
    }
}

mutation createProduct(
    $productData: ProductDataInput!
    $stockItems: [ProductStockItemInput!]!
    $suppliers: [ProductSupplierInput!]!
    $services: [ProductServiceInput!]!
) {
    createProduct(
        productData: $productData
        stockItems: $stockItems
        suppliers: $suppliers
        services: $services
    ) {
        product {
            ...ProductListItem
        }
        error
    }
}

mutation updateProduct(
    $id: ID!
    $productData: ProductDataInput!
    $stockItems: [ProductStockItemInput!]!
    $suppliers: [ProductSupplierInput!]!
    $services: [ProductServiceInput!]!
    $suppliersIdsToDelete: [ID!]!
    $servicesIdsToDelete: [ID!]!
    $stockItemsIdsToDelete: [ID!]!
) {
    updateProduct(
        id: $id
        productData: $productData
        stockItems: $stockItems
        suppliers: $suppliers
        services: $services
        suppliersIdsToDelete: $suppliersIdsToDelete
        servicesIdsToDelete: $servicesIdsToDelete
        stockItemsIdsToDelete: $stockItemsIdsToDelete
    ) {
        product {
            ...ProductListItem
        }
        error
    }
}

query productsStocksByOfficeId($officeId: ID!) {
    productsStocksByOfficeId(officeId: $officeId) {
        id
        product {
            id
            name
        }
        quantity
    }
}

query productsSuppliedBySupplierId($supplierId: ID!) {
    productsSuppliedBySupplierId(supplierId: $supplierId) {
        id
        name
        price
    }
}

mutation deleteProduct($id: ID!) {
    deleteProduct(id: $id) {
        success
    }
}

query productExists($sku: String!) {
    productExists(sku: $sku)
}

query productStocksInDateRange($productId: ID!, $startDate: Date!, $endDate: Date!) {
    productStocksInDateRange(
        productId: $productId
        startDate: $startDate
        endDate: $endDate
    ) {
        office {
            id
            name
        }
        quantity
    }
}

query productStockInOffice($productId: ID!, $officeId: ID!) {
    productStockInOffice(productId: $productId, officeId: $officeId) {
        quantity
    }
}
